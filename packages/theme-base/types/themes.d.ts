import { Variable } from '@tamagui/core';
export declare const colorSchemes: readonly [{
    readonly name: "blue";
    readonly colors: {
        blue1: Variable<string>;
        blue2: Variable<string>;
        blue3: Variable<string>;
        blue4: Variable<string>;
        blue5: Variable<string>;
        blue6: Variable<string>;
        blue7: Variable<string>;
        blue8: Variable<string>;
        blue9: Variable<string>;
        blue10: Variable<string>;
        blue11: Variable<string>;
        blue12: Variable<string>;
    };
    readonly darkColors: {
        blue1: Variable<string>;
        blue2: Variable<string>;
        blue3: Variable<string>;
        blue4: Variable<string>;
        blue5: Variable<string>;
        blue6: Variable<string>;
        blue7: Variable<string>;
        blue8: Variable<string>;
        blue9: Variable<string>;
        blue10: Variable<string>;
        blue11: Variable<string>;
        blue12: Variable<string>;
    };
}, {
    readonly name: "gray";
    readonly colors: {
        gray1: Variable<string>;
        gray2: Variable<string>;
        gray3: Variable<string>;
        gray4: Variable<string>;
        gray5: Variable<string>;
        gray6: Variable<string>;
        gray7: Variable<string>;
        gray8: Variable<string>;
        gray9: Variable<string>;
        gray10: Variable<string>;
        gray11: Variable<string>;
        gray12: Variable<string>;
    };
    readonly darkColors: {
        gray1: Variable<string>;
        gray2: Variable<string>;
        gray3: Variable<string>;
        gray4: Variable<string>;
        gray5: Variable<string>;
        gray6: Variable<string>;
        gray7: Variable<string>;
        gray8: Variable<string>;
        gray9: Variable<string>;
        gray10: Variable<string>;
        gray11: Variable<string>;
        gray12: Variable<string>;
    };
}, {
    readonly name: "green";
    readonly colors: {
        green1: Variable<string>;
        green2: Variable<string>;
        green3: Variable<string>;
        green4: Variable<string>;
        green5: Variable<string>;
        green6: Variable<string>;
        green7: Variable<string>;
        green8: Variable<string>;
        green9: Variable<string>;
        green10: Variable<string>;
        green11: Variable<string>;
        green12: Variable<string>;
    };
    readonly darkColors: {
        green1: Variable<string>;
        green2: Variable<string>;
        green3: Variable<string>;
        green4: Variable<string>;
        green5: Variable<string>;
        green6: Variable<string>;
        green7: Variable<string>;
        green8: Variable<string>;
        green9: Variable<string>;
        green10: Variable<string>;
        green11: Variable<string>;
        green12: Variable<string>;
    };
}, {
    readonly name: "orange";
    readonly colors: {
        orange1: Variable<string>;
        orange2: Variable<string>;
        orange3: Variable<string>;
        orange4: Variable<string>;
        orange5: Variable<string>;
        orange6: Variable<string>;
        orange7: Variable<string>;
        orange8: Variable<string>;
        orange9: Variable<string>;
        orange10: Variable<string>;
        orange11: Variable<string>;
        orange12: Variable<string>;
    };
    readonly darkColors: {
        orange1: Variable<string>;
        orange2: Variable<string>;
        orange3: Variable<string>;
        orange4: Variable<string>;
        orange5: Variable<string>;
        orange6: Variable<string>;
        orange7: Variable<string>;
        orange8: Variable<string>;
        orange9: Variable<string>;
        orange10: Variable<string>;
        orange11: Variable<string>;
        orange12: Variable<string>;
    };
}, {
    readonly name: "pink";
    readonly colors: {
        pink1: Variable<string>;
        pink2: Variable<string>;
        pink3: Variable<string>;
        pink4: Variable<string>;
        pink5: Variable<string>;
        pink6: Variable<string>;
        pink7: Variable<string>;
        pink8: Variable<string>;
        pink9: Variable<string>;
        pink10: Variable<string>;
        pink11: Variable<string>;
        pink12: Variable<string>;
    };
    readonly darkColors: {
        pink1: Variable<string>;
        pink2: Variable<string>;
        pink3: Variable<string>;
        pink4: Variable<string>;
        pink5: Variable<string>;
        pink6: Variable<string>;
        pink7: Variable<string>;
        pink8: Variable<string>;
        pink9: Variable<string>;
        pink10: Variable<string>;
        pink11: Variable<string>;
        pink12: Variable<string>;
    };
}, {
    readonly name: "purple";
    readonly colors: {
        purple1: Variable<string>;
        purple2: Variable<string>;
        purple3: Variable<string>;
        purple4: Variable<string>;
        purple5: Variable<string>;
        purple6: Variable<string>;
        purple7: Variable<string>;
        purple8: Variable<string>;
        purple9: Variable<string>;
        purple10: Variable<string>;
        purple11: Variable<string>;
        purple12: Variable<string>;
    };
    readonly darkColors: {
        purple1: Variable<string>;
        purple2: Variable<string>;
        purple3: Variable<string>;
        purple4: Variable<string>;
        purple5: Variable<string>;
        purple6: Variable<string>;
        purple7: Variable<string>;
        purple8: Variable<string>;
        purple9: Variable<string>;
        purple10: Variable<string>;
        purple11: Variable<string>;
        purple12: Variable<string>;
    };
}, {
    readonly name: "red";
    readonly colors: {
        red1: Variable<string>;
        red2: Variable<string>;
        red3: Variable<string>;
        red4: Variable<string>;
        red5: Variable<string>;
        red6: Variable<string>;
        red7: Variable<string>;
        red8: Variable<string>;
        red9: Variable<string>;
        red10: Variable<string>;
        red11: Variable<string>;
        red12: Variable<string>;
    };
    readonly darkColors: {
        red1: Variable<string>;
        red2: Variable<string>;
        red3: Variable<string>;
        red4: Variable<string>;
        red5: Variable<string>;
        red6: Variable<string>;
        red7: Variable<string>;
        red8: Variable<string>;
        red9: Variable<string>;
        red10: Variable<string>;
        red11: Variable<string>;
        red12: Variable<string>;
    };
}, {
    readonly name: "violet";
    readonly colors: {
        violet1: Variable<string>;
        violet2: Variable<string>;
        violet3: Variable<string>;
        violet4: Variable<string>;
        violet5: Variable<string>;
        violet6: Variable<string>;
        violet7: Variable<string>;
        violet8: Variable<string>;
        violet9: Variable<string>;
        violet10: Variable<string>;
        violet11: Variable<string>;
        violet12: Variable<string>;
    };
    readonly darkColors: {
        violet1: Variable<string>;
        violet2: Variable<string>;
        violet3: Variable<string>;
        violet4: Variable<string>;
        violet5: Variable<string>;
        violet6: Variable<string>;
        violet7: Variable<string>;
        violet8: Variable<string>;
        violet9: Variable<string>;
        violet10: Variable<string>;
        violet11: Variable<string>;
        violet12: Variable<string>;
    };
}, {
    readonly name: "yellow";
    readonly colors: {
        yellow1: Variable<string>;
        yellow2: Variable<string>;
        yellow3: Variable<string>;
        yellow4: Variable<string>;
        yellow5: Variable<string>;
        yellow6: Variable<string>;
        yellow7: Variable<string>;
        yellow8: Variable<string>;
        yellow9: Variable<string>;
        yellow10: Variable<string>;
        yellow11: Variable<string>;
        yellow12: Variable<string>;
    };
    readonly darkColors: {
        yellow1: Variable<string>;
        yellow2: Variable<string>;
        yellow3: Variable<string>;
        yellow4: Variable<string>;
        yellow5: Variable<string>;
        yellow6: Variable<string>;
        yellow7: Variable<string>;
        yellow8: Variable<string>;
        yellow9: Variable<string>;
        yellow10: Variable<string>;
        yellow11: Variable<string>;
        yellow12: Variable<string>;
    };
}, {
    readonly name: "teal";
    readonly colors: {
        teal1: Variable<string>;
        teal2: Variable<string>;
        teal3: Variable<string>;
        teal4: Variable<string>;
        teal5: Variable<string>;
        teal6: Variable<string>;
        teal7: Variable<string>;
        teal8: Variable<string>;
        teal9: Variable<string>;
        teal10: Variable<string>;
        teal11: Variable<string>;
        teal12: Variable<string>;
    };
    readonly darkColors: {
        teal1: Variable<string>;
        teal2: Variable<string>;
        teal3: Variable<string>;
        teal4: Variable<string>;
        teal5: Variable<string>;
        teal6: Variable<string>;
        teal7: Variable<string>;
        teal8: Variable<string>;
        teal9: Variable<string>;
        teal10: Variable<string>;
        teal11: Variable<string>;
        teal12: Variable<string>;
    };
}];
export declare type ColorNames = typeof colorSchemes[number]['name'];
export declare const colorNames: readonly ["blue", "gray", "green", "indigo", "orange", "pink", "purple", "red", "violet", "yellow", "teal"];
declare const baseThemes: {
    dark: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
        blue1Dark: Variable<string>;
        blue2Dark: Variable<string>;
        blue3Dark: Variable<string>;
        blue4Dark: Variable<string>;
        blue5Dark: Variable<string>;
        blue6Dark: Variable<string>;
        blue7Dark: Variable<string>;
        blue8Dark: Variable<string>;
        blue9Dark: Variable<string>;
        blue10Dark: Variable<string>;
        blue11Dark: Variable<string>;
        blue12Dark: Variable<string>;
        gray1Dark: Variable<string>;
        gray2Dark: Variable<string>;
        gray3Dark: Variable<string>;
        gray4Dark: Variable<string>;
        gray5Dark: Variable<string>;
        gray6Dark: Variable<string>;
        gray7Dark: Variable<string>;
        gray8Dark: Variable<string>;
        gray9Dark: Variable<string>;
        gray10Dark: Variable<string>;
        gray11Dark: Variable<string>;
        gray12Dark: Variable<string>;
        grayA1Dark: Variable<string>;
        grayA2Dark: Variable<string>;
        grayA3Dark: Variable<string>;
        grayA4Dark: Variable<string>;
        grayA5Dark: Variable<string>;
        grayA6Dark: Variable<string>;
        grayA7Dark: Variable<string>;
        grayA8Dark: Variable<string>;
        grayA9Dark: Variable<string>;
        grayA10Dark: Variable<string>;
        grayA11Dark: Variable<string>;
        grayA12Dark: Variable<string>;
        green1Dark: Variable<string>;
        green2Dark: Variable<string>;
        green3Dark: Variable<string>;
        green4Dark: Variable<string>;
        green5Dark: Variable<string>;
        green6Dark: Variable<string>;
        green7Dark: Variable<string>;
        green8Dark: Variable<string>;
        green9Dark: Variable<string>;
        green10Dark: Variable<string>;
        green11Dark: Variable<string>;
        green12Dark: Variable<string>;
        orange1Dark: Variable<string>;
        orange2Dark: Variable<string>;
        orange3Dark: Variable<string>;
        orange4Dark: Variable<string>;
        orange5Dark: Variable<string>;
        orange6Dark: Variable<string>;
        orange7Dark: Variable<string>;
        orange8Dark: Variable<string>;
        orange9Dark: Variable<string>;
        orange10Dark: Variable<string>;
        orange11Dark: Variable<string>;
        orange12Dark: Variable<string>;
        pink1Dark: Variable<string>;
        pink2Dark: Variable<string>;
        pink3Dark: Variable<string>;
        pink4Dark: Variable<string>;
        pink5Dark: Variable<string>;
        pink6Dark: Variable<string>;
        pink7Dark: Variable<string>;
        pink8Dark: Variable<string>;
        pink9Dark: Variable<string>;
        pink10Dark: Variable<string>;
        pink11Dark: Variable<string>;
        pink12Dark: Variable<string>;
        purple1Dark: Variable<string>;
        purple2Dark: Variable<string>;
        purple3Dark: Variable<string>;
        purple4Dark: Variable<string>;
        purple5Dark: Variable<string>;
        purple6Dark: Variable<string>;
        purple7Dark: Variable<string>;
        purple8Dark: Variable<string>;
        purple9Dark: Variable<string>;
        purple10Dark: Variable<string>;
        purple11Dark: Variable<string>;
        purple12Dark: Variable<string>;
        red1Dark: Variable<string>;
        red2Dark: Variable<string>;
        red3Dark: Variable<string>;
        red4Dark: Variable<string>;
        red5Dark: Variable<string>;
        red6Dark: Variable<string>;
        red7Dark: Variable<string>;
        red8Dark: Variable<string>;
        red9Dark: Variable<string>;
        red10Dark: Variable<string>;
        red11Dark: Variable<string>;
        red12Dark: Variable<string>;
        violet1Dark: Variable<string>;
        violet2Dark: Variable<string>;
        violet3Dark: Variable<string>;
        violet4Dark: Variable<string>;
        violet5Dark: Variable<string>;
        violet6Dark: Variable<string>;
        violet7Dark: Variable<string>;
        violet8Dark: Variable<string>;
        violet9Dark: Variable<string>;
        violet10Dark: Variable<string>;
        violet11Dark: Variable<string>;
        violet12Dark: Variable<string>;
        yellow1Dark: Variable<string>;
        yellow2Dark: Variable<string>;
        yellow3Dark: Variable<string>;
        yellow4Dark: Variable<string>;
        yellow5Dark: Variable<string>;
        yellow6Dark: Variable<string>;
        yellow7Dark: Variable<string>;
        yellow8Dark: Variable<string>;
        yellow9Dark: Variable<string>;
        yellow10Dark: Variable<string>;
        yellow11Dark: Variable<string>;
        yellow12Dark: Variable<string>;
        teal1Dark: Variable<string>;
        teal2Dark: Variable<string>;
        teal3Dark: Variable<string>;
        teal4Dark: Variable<string>;
        teal5Dark: Variable<string>;
        teal6Dark: Variable<string>;
        teal7Dark: Variable<string>;
        teal8Dark: Variable<string>;
        teal9Dark: Variable<string>;
        teal10Dark: Variable<string>;
        teal11Dark: Variable<string>;
        teal12Dark: Variable<string>;
    };
    dark_active: any;
    dark_Card: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    dark_DrawerFrame: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    dark_SliderTrack: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    dark_SliderTrackActive: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    dark_Switch: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    dark_SwitchThumb: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    dark_Button: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    dark_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    dark_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    dark_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    dark_darker: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    light: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
        teal1: Variable<string>;
        teal2: Variable<string>;
        teal3: Variable<string>;
        teal4: Variable<string>;
        teal5: Variable<string>;
        teal6: Variable<string>;
        teal7: Variable<string>;
        teal8: Variable<string>;
        teal9: Variable<string>;
        teal10: Variable<string>;
        teal11: Variable<string>;
        teal12: Variable<string>;
        yellow1: Variable<string>;
        yellow2: Variable<string>;
        yellow3: Variable<string>;
        yellow4: Variable<string>;
        yellow5: Variable<string>;
        yellow6: Variable<string>;
        yellow7: Variable<string>;
        yellow8: Variable<string>;
        yellow9: Variable<string>;
        yellow10: Variable<string>;
        yellow11: Variable<string>;
        yellow12: Variable<string>;
        violet1: Variable<string>;
        violet2: Variable<string>;
        violet3: Variable<string>;
        violet4: Variable<string>;
        violet5: Variable<string>;
        violet6: Variable<string>;
        violet7: Variable<string>;
        violet8: Variable<string>;
        violet9: Variable<string>;
        violet10: Variable<string>;
        violet11: Variable<string>;
        violet12: Variable<string>;
        red1: Variable<string>;
        red2: Variable<string>;
        red3: Variable<string>;
        red4: Variable<string>;
        red5: Variable<string>;
        red6: Variable<string>;
        red7: Variable<string>;
        red8: Variable<string>;
        red9: Variable<string>;
        red10: Variable<string>;
        red11: Variable<string>;
        red12: Variable<string>;
        purple1: Variable<string>;
        purple2: Variable<string>;
        purple3: Variable<string>;
        purple4: Variable<string>;
        purple5: Variable<string>;
        purple6: Variable<string>;
        purple7: Variable<string>;
        purple8: Variable<string>;
        purple9: Variable<string>;
        purple10: Variable<string>;
        purple11: Variable<string>;
        purple12: Variable<string>;
        pink1: Variable<string>;
        pink2: Variable<string>;
        pink3: Variable<string>;
        pink4: Variable<string>;
        pink5: Variable<string>;
        pink6: Variable<string>;
        pink7: Variable<string>;
        pink8: Variable<string>;
        pink9: Variable<string>;
        pink10: Variable<string>;
        pink11: Variable<string>;
        pink12: Variable<string>;
        orange1: Variable<string>;
        orange2: Variable<string>;
        orange3: Variable<string>;
        orange4: Variable<string>;
        orange5: Variable<string>;
        orange6: Variable<string>;
        orange7: Variable<string>;
        orange8: Variable<string>;
        orange9: Variable<string>;
        orange10: Variable<string>;
        orange11: Variable<string>;
        orange12: Variable<string>;
        green1: Variable<string>;
        green2: Variable<string>;
        green3: Variable<string>;
        green4: Variable<string>;
        green5: Variable<string>;
        green6: Variable<string>;
        green7: Variable<string>;
        green8: Variable<string>;
        green9: Variable<string>;
        green10: Variable<string>;
        green11: Variable<string>;
        green12: Variable<string>;
        grayA1: Variable<string>;
        grayA2: Variable<string>;
        grayA3: Variable<string>;
        grayA4: Variable<string>;
        grayA5: Variable<string>;
        grayA6: Variable<string>;
        grayA7: Variable<string>;
        grayA8: Variable<string>;
        grayA9: Variable<string>;
        grayA10: Variable<string>;
        grayA11: Variable<string>;
        grayA12: Variable<string>;
        gray1: Variable<string>;
        gray2: Variable<string>;
        gray3: Variable<string>;
        gray4: Variable<string>;
        gray5: Variable<string>;
        gray6: Variable<string>;
        gray7: Variable<string>;
        gray8: Variable<string>;
        gray9: Variable<string>;
        gray10: Variable<string>;
        gray11: Variable<string>;
        gray12: Variable<string>;
        blue1: Variable<string>;
        blue2: Variable<string>;
        blue3: Variable<string>;
        blue4: Variable<string>;
        blue5: Variable<string>;
        blue6: Variable<string>;
        blue7: Variable<string>;
        blue8: Variable<string>;
        blue9: Variable<string>;
        blue10: Variable<string>;
        blue11: Variable<string>;
        blue12: Variable<string>;
    };
    light_active: any;
    light_Card: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    light_Button: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    light_SliderTrack: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    light_SliderTrackActive: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    light_Switch: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    light_SwitchThumb: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    light_DrawerFrame: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    light_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    light_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    light_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    light_darker: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
};
declare const allThemes: {
    readonly blue: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly gray: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly green: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly orange: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly pink: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly purple: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly red: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly violet: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly yellow: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly teal: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_blue_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_blue_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_blue_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_gray_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_gray_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_gray_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_green_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_green_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_green_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_orange_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_orange_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_orange_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_pink_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_pink_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_pink_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_purple_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_purple_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_purple_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_red_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_red_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_red_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_violet_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_violet_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_violet_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_yellow_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_yellow_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_yellow_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_teal_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_teal_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_teal_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_blue_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_blue_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_blue_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_gray_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_gray_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_gray_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_green_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_green_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_green_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_orange_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_orange_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_orange_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_pink_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_pink_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_pink_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_purple_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_purple_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_purple_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_red_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_red_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_red_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_violet_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_violet_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_violet_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_yellow_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_yellow_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_yellow_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_teal_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_teal_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_teal_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
        blue1Dark: Variable<string>;
        blue2Dark: Variable<string>;
        blue3Dark: Variable<string>;
        blue4Dark: Variable<string>;
        blue5Dark: Variable<string>;
        blue6Dark: Variable<string>;
        blue7Dark: Variable<string>;
        blue8Dark: Variable<string>;
        blue9Dark: Variable<string>;
        blue10Dark: Variable<string>;
        blue11Dark: Variable<string>;
        blue12Dark: Variable<string>;
        gray1Dark: Variable<string>;
        gray2Dark: Variable<string>;
        gray3Dark: Variable<string>;
        gray4Dark: Variable<string>;
        gray5Dark: Variable<string>;
        gray6Dark: Variable<string>;
        gray7Dark: Variable<string>;
        gray8Dark: Variable<string>;
        gray9Dark: Variable<string>;
        gray10Dark: Variable<string>;
        gray11Dark: Variable<string>;
        gray12Dark: Variable<string>;
        grayA1Dark: Variable<string>;
        grayA2Dark: Variable<string>;
        grayA3Dark: Variable<string>;
        grayA4Dark: Variable<string>;
        grayA5Dark: Variable<string>;
        grayA6Dark: Variable<string>;
        grayA7Dark: Variable<string>;
        grayA8Dark: Variable<string>;
        grayA9Dark: Variable<string>;
        grayA10Dark: Variable<string>;
        grayA11Dark: Variable<string>;
        grayA12Dark: Variable<string>;
        green1Dark: Variable<string>;
        green2Dark: Variable<string>;
        green3Dark: Variable<string>;
        green4Dark: Variable<string>;
        green5Dark: Variable<string>;
        green6Dark: Variable<string>;
        green7Dark: Variable<string>;
        green8Dark: Variable<string>;
        green9Dark: Variable<string>;
        green10Dark: Variable<string>;
        green11Dark: Variable<string>;
        green12Dark: Variable<string>;
        orange1Dark: Variable<string>;
        orange2Dark: Variable<string>;
        orange3Dark: Variable<string>;
        orange4Dark: Variable<string>;
        orange5Dark: Variable<string>;
        orange6Dark: Variable<string>;
        orange7Dark: Variable<string>;
        orange8Dark: Variable<string>;
        orange9Dark: Variable<string>;
        orange10Dark: Variable<string>;
        orange11Dark: Variable<string>;
        orange12Dark: Variable<string>;
        pink1Dark: Variable<string>;
        pink2Dark: Variable<string>;
        pink3Dark: Variable<string>;
        pink4Dark: Variable<string>;
        pink5Dark: Variable<string>;
        pink6Dark: Variable<string>;
        pink7Dark: Variable<string>;
        pink8Dark: Variable<string>;
        pink9Dark: Variable<string>;
        pink10Dark: Variable<string>;
        pink11Dark: Variable<string>;
        pink12Dark: Variable<string>;
        purple1Dark: Variable<string>;
        purple2Dark: Variable<string>;
        purple3Dark: Variable<string>;
        purple4Dark: Variable<string>;
        purple5Dark: Variable<string>;
        purple6Dark: Variable<string>;
        purple7Dark: Variable<string>;
        purple8Dark: Variable<string>;
        purple9Dark: Variable<string>;
        purple10Dark: Variable<string>;
        purple11Dark: Variable<string>;
        purple12Dark: Variable<string>;
        red1Dark: Variable<string>;
        red2Dark: Variable<string>;
        red3Dark: Variable<string>;
        red4Dark: Variable<string>;
        red5Dark: Variable<string>;
        red6Dark: Variable<string>;
        red7Dark: Variable<string>;
        red8Dark: Variable<string>;
        red9Dark: Variable<string>;
        red10Dark: Variable<string>;
        red11Dark: Variable<string>;
        red12Dark: Variable<string>;
        violet1Dark: Variable<string>;
        violet2Dark: Variable<string>;
        violet3Dark: Variable<string>;
        violet4Dark: Variable<string>;
        violet5Dark: Variable<string>;
        violet6Dark: Variable<string>;
        violet7Dark: Variable<string>;
        violet8Dark: Variable<string>;
        violet9Dark: Variable<string>;
        violet10Dark: Variable<string>;
        violet11Dark: Variable<string>;
        violet12Dark: Variable<string>;
        yellow1Dark: Variable<string>;
        yellow2Dark: Variable<string>;
        yellow3Dark: Variable<string>;
        yellow4Dark: Variable<string>;
        yellow5Dark: Variable<string>;
        yellow6Dark: Variable<string>;
        yellow7Dark: Variable<string>;
        yellow8Dark: Variable<string>;
        yellow9Dark: Variable<string>;
        yellow10Dark: Variable<string>;
        yellow11Dark: Variable<string>;
        yellow12Dark: Variable<string>;
        teal1Dark: Variable<string>;
        teal2Dark: Variable<string>;
        teal3Dark: Variable<string>;
        teal4Dark: Variable<string>;
        teal5Dark: Variable<string>;
        teal6Dark: Variable<string>;
        teal7Dark: Variable<string>;
        teal8Dark: Variable<string>;
        teal9Dark: Variable<string>;
        teal10Dark: Variable<string>;
        teal11Dark: Variable<string>;
        teal12Dark: Variable<string>;
    };
    readonly dark_active: any;
    readonly dark_Card: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_DrawerFrame: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_SliderTrack: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_SliderTrackActive: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_Switch: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_SwitchThumb: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_Button: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly dark_darker: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
        teal1: Variable<string>;
        teal2: Variable<string>;
        teal3: Variable<string>;
        teal4: Variable<string>;
        teal5: Variable<string>;
        teal6: Variable<string>;
        teal7: Variable<string>;
        teal8: Variable<string>;
        teal9: Variable<string>;
        teal10: Variable<string>;
        teal11: Variable<string>;
        teal12: Variable<string>;
        yellow1: Variable<string>;
        yellow2: Variable<string>;
        yellow3: Variable<string>;
        yellow4: Variable<string>;
        yellow5: Variable<string>;
        yellow6: Variable<string>;
        yellow7: Variable<string>;
        yellow8: Variable<string>;
        yellow9: Variable<string>;
        yellow10: Variable<string>;
        yellow11: Variable<string>;
        yellow12: Variable<string>;
        violet1: Variable<string>;
        violet2: Variable<string>;
        violet3: Variable<string>;
        violet4: Variable<string>;
        violet5: Variable<string>;
        violet6: Variable<string>;
        violet7: Variable<string>;
        violet8: Variable<string>;
        violet9: Variable<string>;
        violet10: Variable<string>;
        violet11: Variable<string>;
        violet12: Variable<string>;
        red1: Variable<string>;
        red2: Variable<string>;
        red3: Variable<string>;
        red4: Variable<string>;
        red5: Variable<string>;
        red6: Variable<string>;
        red7: Variable<string>;
        red8: Variable<string>;
        red9: Variable<string>;
        red10: Variable<string>;
        red11: Variable<string>;
        red12: Variable<string>;
        purple1: Variable<string>;
        purple2: Variable<string>;
        purple3: Variable<string>;
        purple4: Variable<string>;
        purple5: Variable<string>;
        purple6: Variable<string>;
        purple7: Variable<string>;
        purple8: Variable<string>;
        purple9: Variable<string>;
        purple10: Variable<string>;
        purple11: Variable<string>;
        purple12: Variable<string>;
        pink1: Variable<string>;
        pink2: Variable<string>;
        pink3: Variable<string>;
        pink4: Variable<string>;
        pink5: Variable<string>;
        pink6: Variable<string>;
        pink7: Variable<string>;
        pink8: Variable<string>;
        pink9: Variable<string>;
        pink10: Variable<string>;
        pink11: Variable<string>;
        pink12: Variable<string>;
        orange1: Variable<string>;
        orange2: Variable<string>;
        orange3: Variable<string>;
        orange4: Variable<string>;
        orange5: Variable<string>;
        orange6: Variable<string>;
        orange7: Variable<string>;
        orange8: Variable<string>;
        orange9: Variable<string>;
        orange10: Variable<string>;
        orange11: Variable<string>;
        orange12: Variable<string>;
        green1: Variable<string>;
        green2: Variable<string>;
        green3: Variable<string>;
        green4: Variable<string>;
        green5: Variable<string>;
        green6: Variable<string>;
        green7: Variable<string>;
        green8: Variable<string>;
        green9: Variable<string>;
        green10: Variable<string>;
        green11: Variable<string>;
        green12: Variable<string>;
        grayA1: Variable<string>;
        grayA2: Variable<string>;
        grayA3: Variable<string>;
        grayA4: Variable<string>;
        grayA5: Variable<string>;
        grayA6: Variable<string>;
        grayA7: Variable<string>;
        grayA8: Variable<string>;
        grayA9: Variable<string>;
        grayA10: Variable<string>;
        grayA11: Variable<string>;
        grayA12: Variable<string>;
        gray1: Variable<string>;
        gray2: Variable<string>;
        gray3: Variable<string>;
        gray4: Variable<string>;
        gray5: Variable<string>;
        gray6: Variable<string>;
        gray7: Variable<string>;
        gray8: Variable<string>;
        gray9: Variable<string>;
        gray10: Variable<string>;
        gray11: Variable<string>;
        gray12: Variable<string>;
        blue1: Variable<string>;
        blue2: Variable<string>;
        blue3: Variable<string>;
        blue4: Variable<string>;
        blue5: Variable<string>;
        blue6: Variable<string>;
        blue7: Variable<string>;
        blue8: Variable<string>;
        blue9: Variable<string>;
        blue10: Variable<string>;
        blue11: Variable<string>;
        blue12: Variable<string>;
    };
    readonly light_active: any;
    readonly light_Card: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_Button: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_SliderTrack: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_SliderTrackActive: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_Switch: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_SwitchThumb: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_DrawerFrame: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_alt1: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_alt2: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_alt3: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
    readonly light_darker: {
        background: any;
        backgroundStrong: any;
        backgroundSoft: any;
        backgroundHover: any;
        backgroundPress: any;
        backgroundFocus: any;
        backgroundTransparent: Variable<any>;
        color: any;
        colorHover: any;
        colorPress: any;
        colorFocus: any;
        colorTranslucent: string;
        colorMid: string | Variable<any>;
        shadowColor: Variable<any>;
        shadowColorHover: string | Variable<any>;
        shadowColorPress: string | Variable<any>;
        shadowColorFocus: string | Variable<any>;
        borderColor: string | Variable<any>;
        borderColorHover: string | Variable<any>;
        borderColorPress: string | Variable<any>;
        borderColorFocus: string | Variable<any>;
    };
};
export declare const themes: {
    [key in keyof typeof allThemes]: typeof baseThemes['light'];
};
export {};
//# sourceMappingURL=themes.d.ts.map